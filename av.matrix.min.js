(function(){window.Matrix=window.Matrix||Object.create(Array);Matrix=function(e){var d=Array.prototype.slice.call(arguments),c=Object.create(Array);if(d.every(function(f){return"number"==typeof f}))0==d.length?c=[0]:(c=Array.apply(null,Array(d[0])).map(Number.prototype.valueOf,0),2==d.length&&1!=d[1]&&(c=c.map(function(f){return Array.apply(null,Array(d[1])).map(Number.prototype.valueOf,0)})));else if(d.every(function(f){return f instanceof Array})){if(1==d.length&&0<d[0][0].length)c=d[0];else{if(d.some(function(f){return d[0].length!=
f.length}))return console.error("Matrix:constructor: Every column must have same length"),[];c=Array.apply(null,Array(d.length)).map(Number.prototype.valueOf,0);c=c.map(function(f,c){return d[c]})}Matrix.isNaN(c)&&console.warn("Matrix:constructor: At least one element of the matrix is NaN")}else return console.error("Matrix:constructor: Ooops! Check your arguments"),[];c.size=function(){return[this.length,this[0].length||1]};c.trace=function(){return c.isNaN()?(console.error("Matrix:trace: Matrix must be numerical"),
NaN):this.reduce(function(f,c,g){return c.reduce(function(f,c,l){return f+(g==l)?c:0},f)},0)};c.item=function(f,c){return this[f][c]||null};c.row=function(f){return this[f]||[]};c.column=function(f){return Array(this[0].length).map(function(c,g){return this[g][f]})};c.fill=function(f){if(isNaN(f))return console.error("Matrix:fill: Arguments must be numerical"),Matrix();f=f||1;return Matrix(this.map(function(c){return c.map(function(){return f})}))};c.upper=function(){return Matrix(this.map(function(f,
c){return f.map(function(f,d){return c>=d?f:0})}))};c.lower=function(){return Matrix(this.map(function(f,c){return f.map(function(f,d){return c<=d?f:0})}))};c.transpose=function(){var f=this,c=this.size(),d=new Matrix(c[1],c[0]);return 1==c[0]&&1==c[1]?this:1==c[0]?Matrix(this[0]):1==c[1]?Matrix([this]):Matrix(d.map(function(c,d){return c.map(function(c,g){return f[g][d]})}))};c.minor=function(f,d){if(this.size().some(function(c){2>c}))return console.error("Matrix:submatrix: vectors don't have submatrices"),
Matrix();var g=this.size,g=(new Matrix(g[0]-1,g[1]-1)).map(function(g,h){return g.map(function(g,e){h=h<f?h:h+1;e=e<d?e:e+1;return c[h][e]})});return Matrix(g)};c.scalar=function(f){if(c.isNaN())return console.error("Matrix:scalar: Matrix must be numerical"),Matrix();f=f||1;return this.map(function(c){return c.map(function(c){return c*f})})};c.add=function(f){if(c.isNaN()||f.isNaN())return console.error("Matrix:add: Both Matrices must be numerical"),Matrix();var d=this.samesize(f)?this.map(function(c,
d){return c.map(function(c,g){return c+f[d][g]})}):[];return d==[]?(console.error("Matrix:add: Dimenssions don't fit"),Matrix()):Matrix(d)};c.dot=function(f){if(c.isNaN()||f.isNaN())return console.error("Matrix:dot: Both Matrices must be numerical"),Matrix();if(c.size()[1]!=f.size()[0])return console.error("Matrix:dot: Dimenssions don't fit"),Matrix();var d=this,g=(new Matrix(c.size()[0],f.size()[1])).map(function(c,g){return c.map(function(c,e){return d[g].reduce(function(c,d,g){return c+d*f[g][e]},
0)})});return Matrix(g)};c.LU=function(){if(!this.square()||this.isNaN())return console.error("Matrix:det: Input must be an square numerical matrix"),Matrix();for(var c=this.size()[0],d=new Matrix.diagonal(c),g=this.clone(),e=0;e<c-1;e++)for(var h=e+1;h<c;h++){d[h][e]=g[h][e]/g[e][e];for(var k=0;k<c;k++)g[h][k]-=g[e][k]*d[h][e]}return{L:Matrix(d),U:Matrix(g)}};c.det=function(){if(!this.square()||this.isNaN())return console.error("Matrix:det: Input must be an square numerical matrix"),Matrix();var c=
this.LU().U;return(new Matrix(c.size()[0])).reduce(function(d,g,e){return d*c[e][e]},1)};c.adjugate=function(){if(!this.square()||this.isNaN())return console.error("Matrix:cofactor: Input must be an square numerical matrix"),Matrix();var c=this;_size=this.size()[0];_final=new Matrix.fill(_size);return Matrix(_final.map(function(d,g){return d.map(function(d,e){return Math.pow(-1,g+e)*c.minor(g,e).det()})}))};c.inverse=function(){return!this.square()||this.isNaN()?(console.error("Matrix:inverse: Input must be an square numerical matrix"),
Matrix()):0==this.det()?(console.error("Matrix:inverse: Input matrix is not invertible"),Matrix()):this.adjugate().transpose()/this.det()};c.samesize=function(c){c=a.size();var d=b.size();return c[0]==d[0]&&c[1]==d[1]};c.is=function(c){return this===c?!0:null!=this&&null!=c&&this.samesize(c)?this.reduce(function(d,e,m,h){return d&&e.reduce(function(d,e,g,h){return d&&e==c[m][g]},!0)},!0):!1};c.isNaN=function(){return Matrix.isNaN(this)};c.symmetric=function(){return c.is(c.transpose())};c.square=
function(){var c=this.size();return c[0]==c[1]};c.clone=function(){return new Matrix(JSON.parse(JSON.stringify(this)))};c.tostring=function(d){d=d||", ";return 1==c.size()[1]?this.join(d):c.reduce(function(c,e){return c+e.join(d)+"\n"},"")};return c};Matrix.fill=function(e,d){if(isNaN(e)||isNaN(d))return console.error("Matrix:fill: Arguments must be numerical"),Matrix();d=d||1;return Matrix(Matrix(e,e).map(function(c){return c.map(function(){return d})}))};Matrix.diagonal=function(e,d){d=d||1;return isNaN(e)||
isNaN(d)?(console.error("Matrix:diagonal: Arguments must be numerical"),Matrix()):new Matrix(Matrix(e,e).map(function(c,f){return c.map(function(c,e){return f==e?d:0})}))};Matrix.upper=function(e,d){d=d||1;return isNaN(e)||isNaN(d)?(console.error("Matrix:upper: Arguments must be numerical"),Matrix()):new Matrix(Matrix(e,e).map(function(c,f){return c.map(function(c,e){return f>=e?d:0})}))};Matrix.lower=function(e,d){d=d||1;return isNaN(e)||isNaN(d)?(console.error("Matrix:lower: Arguments must be numerical"),
Matrix()):new Matrix(Matrix(e,e).map(function(c,e){return c.map(function(c,g){return e<=g?d:0})}))};Matrix.isNaN=function(e){return"undefined"==typeof e[0].length?e.some(function(d){return isNaN(d)}):e.some(function(d){return d.some(function(c){return isNaN(c)})})}})();