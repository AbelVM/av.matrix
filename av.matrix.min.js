(function(){window.Matrix=window.Matrix||Object.create(Array);Matrix=function(c){var b=Array.prototype.slice.call(arguments),a=Object.create(Array);if(b.every(function(d){return"number"==typeof d}))0==b.length?a=[0]:(a=Array.apply(null,Array(b[0])).map(Number.prototype.valueOf,0),2==b.length&&1!=b[1]&&(a=a.map(function(d){return Array.apply(null,Array(b[1])).map(Number.prototype.valueOf,0)})));else if(b.every(function(d){return d instanceof Array})){if(1==b.length&&0<b[0][0].length)a=b[0];else{if(b.some(function(d){return b[0].length!=
d.length}))return console.error("Matrix:constructor: Every column must have same length"),[];a=Array.apply(null,Array(b.length)).map(Number.prototype.valueOf,0);a=a.map(function(d,a){return b[a]})}Matrix.isNaN(a)&&console.warn("Matrix:constructor: At least one element of the matrix is NaN")}else return console.error("Matrix:constructor: Ooops! Check your arguments"),[];a.size=function(){return[this.length,this[0].length||1]};a.trace=function(){return a.isNaN()?(console.error("Matrix:trace: Matrix must be numerical"),
NaN):this.reduce(function(d,a,e){return a.reduce(function(d,a,k){return d+(e==k)?a:0},d)},0)};a.item=function(d,a){return this[d][a]||null};a.row=function(d){return this[d]||[]};a.column=function(d){return Array(this[0].length).map(function(a,e){return this[e][d]})};a.fill=function(d){if(isNaN(d))return console.error("Matrix:fill: Arguments must be numerical"),Matrix();d=d||1;return Matrix(this.map(function(a){return a.map(function(){return d})}))};a.upper=function(){return Matrix(this.map(function(d,
a){return d.map(function(d,b){return a>=b?d:0})}))};a.lower=function(){return Matrix(this.map(function(d,a){return d.map(function(d,b){return a<=b?d:0})}))};a.transpose=function(){var d=this,a=this.size(),b=new Matrix(a[1],a[0]);return 1==a[0]&&1==a[1]?this:1==a[0]?Matrix(this[0]):1==a[1]?Matrix([this]):Matrix(b.map(function(a,b){return a.map(function(a,e){return d[e][b]})}))};a.minor=function(d,b){if(this.size().some(function(d){return 2>d}))return console.error("Matrix:submatrix: vectors don't have submatrices"),
Matrix();var e=this.size,e=(new Matrix(e[0]-1,e[1]-1)).map(function(e,c){return e.map(function(e,f){c=c<d?c:c+1;f=f<b?f:f+1;return a[c][f]})});return Matrix(e)};a.scalar=function(d){if(a.isNaN())return console.error("Matrix:scalar: Matrix must be numerical"),Matrix();d=d||1;return this.map(function(a){return a.map(function(a){return a*d})})};a.add=function(d){if(a.isNaN()||d.isNaN())return console.error("Matrix:add: Both Matrices must be numerical"),Matrix();var b=this.samesize(d)?this.map(function(a,
b){return a.map(function(a,e){return a+d[b][e]})}):[];return b==[]?(console.error("Matrix:add: Dimenssions don't fit"),Matrix()):Matrix(b)};a.dot=function(d){if(a.isNaN()||d.isNaN())return console.error("Matrix:dot: Both Matrices must be numerical"),Matrix();if(a.size()[1]!=d.size()[0])return console.error("Matrix:dot: Dimenssions don't fit"),Matrix();var b=this,e=(new Matrix(a.size()[0],d.size()[1])).map(function(a,e){return a.map(function(a,c){return b[e].reduce(function(a,b,e){return a+b*d[e][c]},
0)})});return Matrix(e)};a.LU=function(){if(!this.square()||this.isNaN())return console.error("Matrix:det: Input must be an square numerical matrix"),Matrix();for(var a=this.size()[0],b=new Matrix.Diagonal(a),e=this.clone(),c=0;c<a-1;c++)for(var g=c+1;g<a;g++){b[g][c]=e[g][c]/e[c][c];for(var h=0;h<a;h++)e[g][h]-=e[c][h]*b[g][c]}return{L:Matrix(b),U:Matrix(e)}};a.det=function(){if(!this.square()||this.isNaN())return console.error("Matrix:det: Input must be an square numerical matrix"),Matrix();var a=
this.LU().U;return(new Matrix(a.size()[0])).reduce(function(b,e,c){return b*a[c][c]},1)};a.adjugate=function(){if(!this.square()||this.isNaN())return console.error("Matrix:cofactor: Input must be an square numerical matrix"),Matrix();var a=this,b=this.size()[0],b=new Matrix.Fill(b);return Matrix(b.map(function(b,c){return b.map(function(b,e){return Math.pow(-1,c+e)*a.minor(c,e).det()})}))};a.inverse=function(){return!this.square()||this.isNaN()?(console.error("Matrix:inverse: Input must be an square numerical matrix"),
Matrix()):0==this.det()?(console.error("Matrix:inverse: Input matrix is not invertible"),Matrix()):this.adjugate().transpose()/this.det()};a.samesize=function(a){var b=this.size();a=a.size();return b[0]==a[0]&&b[1]==a[1]};a.is=function(a){return this===a?!0:null!=this&&null!=a&&this.samesize(a)?this.reduce(function(b,c,f){return b&&c.reduce(function(b,c,e){return b&&c==a[f][e]},!0)},!0):!1};a.isNaN=function(){return Matrix.isNaN(this)};a.symmetric=function(){return a.is(a.transpose())};a.square=function(){var a=
this.size();return a[0]==a[1]};a.clone=function(){return new Matrix(JSON.parse(JSON.stringify(this)))};a.tostring=function(b){b=b||", ";return 1==a.size()[1]?this.join(b):a.reduce(function(a,c){return a+c.join(b)+"\n"},"")};return a};Matrix.Fill=function(c,b){if(isNaN(c)||isNaN(b))return console.error("Matrix:fill: Arguments must be numerical"),Matrix();b=b||1;return Matrix(Matrix(c,c).map(function(a){return a.map(function(){return b})}))};Matrix.Diagonal=function(c,b){b=b||1;return isNaN(c)||isNaN(b)?
(console.error("Matrix:diagonal: Arguments must be numerical"),Matrix()):new Matrix(Matrix(c,c).map(function(a,d){return a.map(function(a,c){return d==c?b:0})}))};Matrix.Upper=function(c,b){b=b||1;return isNaN(c)||isNaN(b)?(console.error("Matrix:upper: Arguments must be numerical"),Matrix()):new Matrix(Matrix(c,c).map(function(a,d){return a.map(function(a,c){return d>=c?b:0})}))};Matrix.Lower=function(c,b){b=b||1;return isNaN(c)||isNaN(b)?(console.error("Matrix:lower: Arguments must be numerical"),
Matrix()):new Matrix(Matrix(c,c).map(function(a,d){return a.map(function(a,c){return d<=c?b:0})}))};Matrix.isNaN=function(c){return"undefined"==typeof c[0].length?c.some(function(b){return isNaN(b)}):c.some(function(b){return b.some(function(a){return isNaN(a)})})}})();